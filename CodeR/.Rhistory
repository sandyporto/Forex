mkl
?mkl
library(RSNNS)
install.packages("RSNNS")
??normalize
??split
source('C:/Users/LAB/Desktop/Forex/C贸digo R/forecast.R')
sizets = length(ts)
nlines = sizets-block
s.ts = matrix(nrow = nlines, ncol = block+1)
View(s.ts)
i = 1
ts[i:(i+block)]
for(i in 1:nlines){
s.ts[i,] = ts[i:(i+block)]
}
View(s.ts)
rm(list = ls())
dirname = getSrcDirectory(function(x) {x})
setwd(dirname)
library(forecast)
library(deepnet)
library(RSNNS)
source("databaseconnection.R")
open = 1
names(open) <- "open"
close = 2
names(close) <- "close"
high = 3
names(high) <- "high"
low = 4
names(low) <- "low"
minutes = 1
block = 20
omega = 1
mi = 0.2
hiddenlayers = c(20,20)
pteste = 0.3
data = loadData(minutes)
ts = make.ts(data,open)
data = sample.ts(ts,block)
View(data)
dataNorm = normalizeData(data,type="norm")
dataNorm = gammaMemory(dataNorm,omega,mi)
View(dataNorm)
dataSplit = splitForTrainingAndTest(dataNorm[,1:block],dataNorm[,block+1],ratio=pteste)
dnn = dbn.dnn.train(x = dataSplit$inputsTrain,
y = dataSplit$targetsTrain,
hidden = c(block/2,block/2),
hidden_dropout = 0.5)
predict = nn.predict(dnn,dataSplit$inputsTest)
errors = accuracy(predict,dataSplit$targetsTest)
errors = accuracy(as.ts(predict),as.ts(dataSplit$targetsTest))
View(errors)
predict = nn.predict(dnn,dataSplit$inputsTest)
targets = denormalizeData(dataSplit$targetsTest,getNormParameters(dataNorm))
forecastvalues = denormalizeData(predict,getNormParameters(dataNorm))
erros = accuracy(as.ts(forecastvalues),as.ts(targets))
View(erros)
erros
source('C:/Users/LAB/Desktop/Forex/C贸digo R/forecast.R')
erros$ME
errros$ME
errors$ME
errors = as.list(errors)
errors$ME
?switch
typestring = switch(type,
open = "Open",
close = "Close",
high = "High",
low = "Low")
type=open
typestring = switch(type,
open = "Open",
close = "Close",
high = "High",
low = "Low")
title = cat(typestring,"Data, Range",range,", Minutes",minutes,",Block",block)
range = nrow(data)
title = cat(typestring,"Data, Range",range,", Minutes",minutes,",Block",block)
title = cat(typestring," Data, Range ",range,", Minutes ",minutes,", Block ",block,sep="")
title = paste(typestring," Data, Range ",range,", Minutes ",minutes,", Block ",block,sep="")
cat(title)
details = list(col=c(1,2),main=title)
ts.plot(forecastvalues,targets,gpars=details)
details = list(col=c(2,1),main=title)
ts.plot(forecastvalues,targets,gpars=details)
errors = accuracy(forecastvalues,targets)
cat(errors)
print(errors)
filename=paste(title,".png",sep="")
filename=paste("/Results/",title,".png",sep="")
filename=paste(getwd(),"/Results/",title,".png",sep="")
source('C:/Users/LAB/Desktop/Forex/C贸digo R/testForecast.R')
hiddenlayers = c(block/2,block/2)
source('C:/Users/LAB/Desktop/Forex/C贸digo R/testForecast.R')
auxfilename=paste(getwd(),"/Results/",title,".png",sep="")
png(filename=auxfilename)
